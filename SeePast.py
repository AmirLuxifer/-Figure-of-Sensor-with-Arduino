# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'SeePast.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
from datetime import datetime
import sqlite3
import sys
import pandas as pd

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QColorDialog, QMessageBox
from pyqtgraph import PlotWidget, DateAxisItem

import pyqtgraph as pg
class TimeAxisItem(pg.AxisItem):
    def tickStrings(self, values, scale, spacing):
        return [datetime.fromtimestamp(value) for value in values]


def view():
    conn = sqlite3.connect("name4.db")
    cur = conn.cursor()
    cur.execute("SELECT * FROM book")
    rows = cur.fetchall()
    conn.close()
    return rows


def update(id, R, G, B):
    conn = sqlite3.connect("name4.db")
    cur = conn.cursor()
    cur.execute("UPDATE book SET R=?,G=?,B=? WHERE id=?", (R, G, B, id))
    conn.commit()
    conn.close()


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(895, 498)
        MainWindow.setStyleSheet("background-color: rgb(0, 0, 0);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setStyleSheet("color: rgb(255, 255, 255);\n"
                                      "background-color: rgb(89, 89, 89);")
        self.pushButton.setObjectName("pushButton")
        self.gridLayout.addWidget(self.pushButton, 8, 1, 3, 2)
        self.checkBox_2 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_2.setStyleSheet("color: rgb(255, 255, 255);\n"
                                      "font: 8pt \"Tahoma\";")
        self.checkBox_2.setObjectName("checkBox_2")
        self.gridLayout.addWidget(self.checkBox_2, 5, 0, 1, 1)
        self.checkBox_4 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_4.setStyleSheet("color: rgb(255, 255, 255);\n"
                                      "font: 8pt \"Tahoma\";")
        self.checkBox_4.setObjectName("checkBox_4")
        self.gridLayout.addWidget(self.checkBox_4, 8, 0, 1, 1)
        self.checkBox = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox.setStyleSheet("color: rgb(255, 255, 255);\n"
                                    "font: 8pt \"Tahoma\";")
        self.checkBox.setObjectName("checkBox")
        self.gridLayout.addWidget(self.checkBox, 4, 0, 1, 1)
        self.checkBox_3 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_3.setStyleSheet("color: rgb(255, 255, 255);\n"
                                      "font: 8pt \"Tahoma\";")
        self.checkBox_3.setObjectName("checkBox_3")
        self.gridLayout.addWidget(self.checkBox_3, 6, 0, 1, 1)
        self.graphicsView = PlotWidget(self.centralwidget)
        self.graphicsView.setObjectName("graphicsView")
        self.gridLayout.addWidget(self.graphicsView, 0, 0, 1, 3)
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setStyleSheet("color: rgb(255, 255, 255);\n"
                                 "font: 8pt \"Tahoma\";")
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 1, 2, 1, 1)
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setStyleSheet("color: rgb(255, 255, 255);\n"
                                        "font: 8pt \"Tahoma\";\n"
                                        "background-color: rgb(102, 102, 102);")
        self.pushButton_3.setObjectName("pushButton_3")
        self.gridLayout.addWidget(self.pushButton_3, 5, 2, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setStyleSheet("color: rgb(255, 255, 255);font: 9pt \"Tahoma\";")
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 4, 1, 1, 1)
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setStyleSheet("color: rgb(255, 255, 255);font: 9pt \"Tahoma\";")
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.gridLayout.addWidget(self.comboBox, 4, 2, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setStyleSheet("color: rgb(255, 255, 255);font: 9pt \"Tahoma\";")
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 5, 1, 1, 1)
        self.toolButton = QtWidgets.QToolButton(self.centralwidget)
        self.toolButton.setStyleSheet("color: rgb(255, 255, 255);\n"
                                      "background-color: rgb(89, 89, 89);")
        self.toolButton.setObjectName("toolButton")
        self.gridLayout.addWidget(self.toolButton, 2, 2, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.toolButton.clicked.connect(self.open)
        self.pushButton.clicked.connect(self.seepast)
        self.pushButton_3.clicked.connect(self.color)

    def color(self):
        color = QColorDialog.getColor()
        if str(self.comboBox.currentText()) == view()[0][1]:
            try:
                update(id=1, R=color.getRgb()[0], G=color.getRgb()[1],
                       B=color.getRgb()[2])
            except:
                pass
        if str(self.comboBox.currentText()) == view()[1][1]:
            try:
                update(id=2, R=color.getRgb()[0], G=color.getRgb()[1],
                       B=color.getRgb()[2])
            except:
                pass
        if str(self.comboBox.currentText()) == view()[2][1]:
            try:
                update(id=3, R=color.getRgb()[0], G=color.getRgb()[1],
                       B=color.getRgb()[2])
            except:
                pass
        if str(self.comboBox.currentText()) == view()[3][1]:
            try:
                update(id=4, R=color.getRgb()[0], G=color.getRgb()[1],
                       B=color.getRgb()[2])
            except:
                pass

    def open(self):
        global filenamecsv
        filename = QtWidgets.QFileDialog.getSaveFileName(None, 'Open a file', '', 'All Files (*.*)', "csv files")
        if filename != ('', ''):
            filenamecsv = filename[0]

    def seepast(self):
        try:
            if not (self.checkBox.isChecked() or self.checkBox_2.isChecked() or self.checkBox_3.isChecked() or self.checkBox_4.isChecked()):
                raise InterruptedError
            axis = DateAxisItem()
            self.graphicsView.setAxisItems({'bottom': axis})
            self.graphicsView.setYRange(min=0, max=5, padding=0.05)
            asghar = []

            dff = pd.read_csv(filenamecsv, usecols=['DATE'], low_memory=True)
            list_x = dff['DATE'].values
            for i in list_x:
                asghar.append(datetime.strptime(i, '%Y-%m-%d %H:%M:%S.%f'))
            self.graphicsView.clear()
            self.graphicsView.addLegend().clear()
            if self.checkBox.isChecked():
                df = pd.read_csv(filenamecsv, usecols=[view()[0][1]], low_memory=True)
                self.graphicsView.plot([x.timestamp() for x in asghar], df[view()[0][1]],
                                       pen=(view()[0][2], view()[0][3], view()[0][4]),
                                       name=view()[0][1])
            if self.checkBox_2.isChecked():
                df1 = pd.read_csv(filenamecsv, usecols=[view()[1][1]], low_memory=True)
                self.graphicsView.plot([x.timestamp() for x in asghar], df1[view()[1][1]],
                                       pen=(view()[1][2], view()[1][3], view()[1][4]),
                                       name=view()[1][1])
            if self.checkBox_3.isChecked():
                df2 = pd.read_csv(filenamecsv, usecols=[view()[2][1]], low_memory=True)
                self.graphicsView.plot([x.timestamp() for x in asghar], df2[view()[2][1]],
                                       pen=(view()[2][2], view()[2][3], view()[2][4]),
                                       name=view()[2][1])
            if self.checkBox_4.isChecked():
                df3 = pd.read_csv(filenamecsv, usecols=[view()[3][1]], low_memory=True)
                self.graphicsView.plot([x.timestamp() for x in asghar], df3[view()[3][1]],
                                       pen=(view()[3][2], view()[3][3], view()[3][4]),
                                       name=view()[3][1])
        except InterruptedError:
            QMessageBox.about(object.__init__(self),"None output", "Plese Select a checkbox")
        except:
            QMessageBox.about(object.__init__(self), "None Data", "Please Select a csv file")

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "See Past - JAV"))
        self.pushButton.setText(_translate("MainWindow", "Show"))
        self.checkBox_2.setText(_translate("MainWindow", view()[1][1]))
        self.checkBox_4.setText(_translate("MainWindow", view()[3][1]))
        self.checkBox.setText(_translate("MainWindow", view()[0][1]))
        self.checkBox_3.setText(_translate("MainWindow", view()[2][1]))
        self.label.setText(_translate("MainWindow",
                                      "   لطفا فایل را انتخاب کرده و سپس سنسور ها را انتخاب کنید و دکمه Show را بفشارید            "))
        self.pushButton_3.setText(_translate("MainWindow", "Select Color"))
        self.label_2.setText(_translate("MainWindow", "Select your Sensor :"))
        self.comboBox.setItemText(0, _translate("MainWindow", view()[0][1]))
        self.comboBox.setItemText(1, _translate("MainWindow", view()[1][1]))
        self.comboBox.setItemText(2, _translate("MainWindow", view()[2][1]))
        self.comboBox.setItemText(3, _translate("MainWindow", view()[3][1]))
        self.label_3.setText(_translate("MainWindow", "Select your Color GraghView :                            "))
        self.toolButton.setText(_translate("MainWindow",
                                           "                                                                              ...                                                                              "))
        self.graphicsView.addLegend()


# app = QtWidgets.QApplication(sys.argv)
# MainWindow = QtWidgets.QMainWindow()
# ui = Ui_MainWindow()
# ui.setupUi(MainWindow)
# MainWindow.show()
# sys.exit(app.exec_())
